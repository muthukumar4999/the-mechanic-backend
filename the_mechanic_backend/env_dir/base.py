"""
Django settings for backend project.

Generated by 'django-admin startproject' using Django 2.1.3.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""

import os

from corsheaders.defaults import default_headers

ENVIRONMENT_DEVELOPMENT = "DEVELOPMENT"
ENVIRONMENT_STAGING = "STAGING"
ENVIRONMENT_PRODUCTION = "PRODUCTION"


def set_environment():
    environment = os.environ.get('DJANGO_ENVIRONMENT', 'DEVELOPMENT')

    if environment == ENVIRONMENT_DEVELOPMENT:
        os.environ.setdefault("DJANGO_SETTINGS_MODULE", "the_mechanic_backend.env_dir.dev")
    elif environment == ENVIRONMENT_STAGING:
        os.environ.setdefault("DJANGO_SETTINGS_MODULE", "the_mechanic_backend.env_dir.staging")
    elif environment == ENVIRONMENT_PRODUCTION:
        os.environ.setdefault("DJANGO_SETTINGS_MODULE", "the_mechanic_backend.env_dir.prod")


# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '-vfiim&d5p=i1lyj)7o2+a57k(cz0&t+zqh%plnw5vlza$1q+&'

# Application definition

PERSONAL_APPS = [
    'the_mechanic_backend',
    'the_mechanic_backend.apps.accounts',
    'the_mechanic_backend.apps.stock',
    'the_mechanic_backend.apps.service',
    'the_mechanic_backend.v0',
]

THIRD_PARTY_APPS = [
    'rest_framework',
    'corsheaders',
    'rest_framework_swagger',
    'whitenoise.runserver_nostatic',
]

DJANGO_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

INSTALLED_APPS = PERSONAL_APPS + THIRD_PARTY_APPS + DJANGO_APPS

MIDDLEWARE = [
    # authentication token detection
    'corsheaders.middleware.CorsMiddleware',

    # Default
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',

    # more default
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
        # Custom authentication permission can be added here
    ],
    'DEFAULT_AUTHENTICATION_CLASSES': [
        # 'oauth2_provider.contrib.rest_framework.OAuth2Authentication',
        'rest_framework.authentication.SessionAuthentication',
        'the_mechanic_backend.v0.permissions.CustomAuthentication'
    ],
}

ROOT_URLCONF = 'the_mechanic_backend.urls'

AUTH_USER_MODEL = 'accounts.User'
AUTHENTICATION_BACKENDS = ('the_mechanic_backend.v0.permissions.CustomAuthentication',)


CORS_ALLOW_HEADERS = default_headers + (
    'Content-Disposition',
)

CORS_ORIGIN_ALLOW_ALL = True

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ['the_mechanic_backend/templates/'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]



LOGGING = {
    # Logger configuration dictionary
    'version': 1,

    # disabling the django default logger because we have a customized logger
    'disable_existing_loggers': True,
}

WSGI_APPLICATION = 'the_mechanic_backend.wsgi.application'

# Password validation
# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/2.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Kolkata'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.1/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, '..', "static/")

LOG_URL = 'logs/'
LOG_ROOT = os.path.join(BASE_DIR, '..', "logs/")

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, '..', 'media/', )

# Email Configuration
EMAIL_USE_TLS = True
EMAIL_USE_SSL = False
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'

DATA_UPLOAD_MAX_NUMBER_FIELDS = 10240


SWAGGER_SETTINGS = {
    "exclude_namespaces": ["api-docs"],  # List URL namespaces to ignore
}
